import{an as a,b0 as s,b1 as o,b2 as n}from"./index-B6yCc2m_.js";async function d(t){const e=await a.get("/system/role/list",{params:t});return e.data.code===200?e.data:Promise.reject(new Error(e.data.msg))}async function i(t){const e=await a.post("/system/role",t);return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}async function u(t){const e=await a.put("/system/role",t);return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}async function m(t){const e=await a.delete("/system/role/"+t.join());return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}async function l(t,e){const r=await a.put("/system/role/changeStatus",{roleId:t,status:e});return r.data.code===200?r.data.msg:Promise.reject(new Error(r.data.msg))}async function w(t){const e=await a({url:"/system/role/export",method:"POST",data:s(t),responseType:"blob"});await o(e),n(e.data,`role_${Date.now()}.xlsx`)}async function f(t){const e=await a.get("/system/role/optionselect",{params:t});return e.data.code===200&&e.data.data?e.data.data:Promise.reject(new Error(e.data.msg))}async function g(t){if(!t){const r=await a.get("/system/menu/treeselect");return r.data.code===200?{menus:r.data.data}:Promise.reject(new Error(r.data.msg))}const e=await a.get("/system/menu/roleMenuTreeselect/"+t);return e.data.code===200?e.data:Promise.reject(new Error(e.data.msg))}async function y(t){const e=await a.get("/system/role/deptTree/"+t);return e.data.code===200?e.data:Promise.reject(new Error(e.data.msg))}async function p(t){const e=await a.put("/system/role/dataScope",t);return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}async function j(t){const e=await a.get("/system/role/authUser/allocatedList",{params:t});return e.data.code===200?e.data:Promise.reject(new Error(e.data.msg))}async function P(t){const e=await a.put("/system/role/authUser/cancelAll",s(t));return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}async function E(t){const e=await a.get("/system/role/authUser/unallocatedList",{params:t});return e.data.code===200?e.data:Promise.reject(new Error(e.data.msg))}async function R(t){const e=await a.put("/system/role/authUser/selectAll",s(t));return e.data.code===200?e.data.msg:Promise.reject(new Error(e.data.msg))}export{i as a,y as b,E as c,R as d,j as e,m as f,w as g,l as h,f as i,g as l,d as p,P as r,p as s,u};
